/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.4/userguide/java_library_plugin.html
 */


plugins {
    id 'java-library'

	// TODO: configure java plugin in order to configure .jar
	//       https://docs.gradle.org/current/userguide/java_plugin.html
    id 'java'

    id 'eclipse'
	id 'application'
}

run {

    mainClassName = "ca.aquiletour.Main"
    standardInput = System.in
}

task generateApacheConf (dependsOn: 'classes', type: JavaExec) {
    main = 'ca.aquiletour.GenerateApacheConf'
    classpath = sourceSets.main.runtimeClasspath
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    
    mavenCentral()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:27.0.1-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
    // Json serialization
    implementation 'com.google.code.gson:gson:2.8.5'

    // Websocket
    // https://github.com/TooTallNate/Java-WebSocket
    implementation 'org.java-websocket:Java-WebSocket:1.4.0'
}

jar {
	manifest {
        attributes 'Implementation-Title': 'aquiletour',  
        	'Implementation-Version': 1.0,
        	'Main-Class': 'ca.aquiletour.Main'
    }
}


